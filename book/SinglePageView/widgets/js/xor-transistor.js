// Generated by CoffeeScript 1.3.1
(function() {
  var black, blue, clickable, darkgray, fontfamily, gray, green, orange, purple, red, white, yellow, powerBar, powerDots;

  black = '#000';
  white = "#fff";
  gray = '#B3B3B3';
  red = '#f00';
  orange = "#2c9ad0"; // truthtable highlight
  yellow = '#FFE303';
  green = '#0f0';
  blue = "#00adef";
  purple = "#8A2BE2";
  clickable = '#ff9800';
  red = "#B20000";
  darkgray = '#767676';
  gray = "#999";

  powerBar = darkgray;
  powerDots = red;

  fontfamily = '"HelveticaNeue-Light", "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif';

  window.onload = function() {
    var blackThickWires, changeGateOutput, changeResults, clickables, columnLabels, g, gate, gateA, gateB, gateC, gateD, gateE, gateShape, gate_input_a, gate_input_b, gate_output_c, gates, groundLine, highlightRowinTable, ii, inputAA_label, inputA_label, inputBB_label, inputB_label, inputa, inputb, io, labels, leftTransistors, makeMovingLine, midWire, oi, oo, output, output_label, outputc, powerLine, r, rightTransistors, rows, showWires, signalText, table, toggle, transistorA, transistorAA, transistorB, transistorBB, transistorC, transistorShape, whenClicked, xor_gate_path;
    r = new Raphael('transistor-xor-ralph', 665, 500);
    g = new Raphael('XORgate_and_TT', 400, 400);
    xor_gate_path = 'M142.215,77.002c-2.061-6.25-12.08-26.34-56.03-29h-16.17l2.21,3.76c1.8,3.08,4.01,7.14,6.03,11.24h-3.63\
			c-2.92-6.11-5.98-11.46-6.62-12.55l-3.46,2.01c1.32,2.28,3.49,6.24,5.62,10.54h-12.78v4h14.69c2.39,5.22,4.35,10.38,4.359,13.21\
			c0.01,2.58-1.56,7.06-3.609,11.79h-15.44v4h13.62c-2.38,5.03-4.96,9.83-6.47,12.46l3.479,1.99c0.69-1.21,4.271-7.57,7.42-14.45\
			h2.55c-2.18,4.59-4.43,8.85-5.79,11.28l-2.069,3.72h15.51c41.86-1.87,54.38-25.04,56.58-30h21.17v-4H142.215z M77.175,92.002\
			c1.87-4.53,3.27-8.89,3.26-11.8c-0.01-3.2-1.77-8.2-3.97-13.2h3.689c2.261,4.98,3.931,9.56,3.881,11.95\
			c-0.061,2.81-1.91,7.86-4.21,13.05H77.175z M85.465,106.002h-6.89c3.55-6.74,10.319-20.4,10.46-26.95\
			c0.13-6.19-6.7-19.42-10.36-26.05h7.28c24.56,1.5,37.359,8.73,43.779,14.54c5.521,5,7.36,9.82,7.87,11.51\
			C135.745,83.082,124.154,104.252,85.465,106.002z';
    gate = g.path(xor_gate_path).attr({
      fill: black,
      stroke: black
    });
    table = g.path("M250,45 h120 m-50,-20 v110 ").attr({
      'stroke': black,
      "stroke-width": "1.5px"
    });
    rows = g.set().push(
      oo = g.text(345, 60, " 0 \u00a0\u00a0\u00a0 0 \u00a0\u00a0\u00a0 \u00a0" + 0), 
      oi = g.text(345, 80, " 0 \u00a0\u00a0\u00a0 1  \u00a0\u00a0\u00a0 \u00a0" + 1), 
      io = g.text(345, 100, " 1 \u00a0\u00a0\u00a0 0 \u00a0\u00a0\u00a0 \u00a0" + 1), 
      ii = g.text(345, 120, " 1 \u00a0\u00a0\u00a0 1 \u00a0\u00a0\u00a0 \u00a0" + 0)).attr({
      'font-size': '18px',
      'fill': darkgray,
      'text-anchor': 'end',
      'font-family': fontfamily
    });
    columnLabels = g.set().push(inputa = g.text(265, 30, "A"), inputb = g.text(301, 30, "B"), outputc = g.text(341, 30, "C")).attr({
      'font-size': '18px',
      'fill': darkgray,
      'font-family': fontfamily
    });
    clickables = g.set().push(gate_input_a = g.text(45, 65, "A"), gate_input_b = g.text(45, 95, "B")).attr({
      'font-size': '18px',
      'fill': clickable,
      'font-family': fontfamily,
      cursor: 'pointer'
    });
    gate_output_c = g.text(185, 80, "C").attr({
      'font-size': '18px',
      'fill': darkgray,
      'font-family': fontfamily
    });
    transistorShape = "v 50 h-50 v50 h50 v50";
    blackThickWires = r.set().push(groundLine = r.path("M61,400 h600"), leftTransistors = r.path("M223.5, 100 v150 h-50 " + transistorShape + " m37.5,-150 h80" + transistorShape), midWire = r.path("M223.5,175 h100 v100 h25 "), rightTransistors = r.path("M523.5,100 v50 h-70 v50" + transistorShape + "v50 m70,-250 h50 " + transistorShape + "h-50 v50 h50 v50 m0,-250 h40")).attr({
      stroke: black,
      'stroke-width': '7pt'
    });
    powerLine = r.path("M61,100 h 600").attr({
      stroke: darkgray,
      'stroke-width': '7pt'
    });
    gateShape = "v50 m0,-25 h-10";
    gates = r.set().push(gateA = r.path("M115,300" + gateShape), gateB = r.path("M233,300 " + gateShape), gateC = r.path("M393,250 " + gateShape), gateD = r.path("M512,200 " + gateShape), gateE = r.path("M512,300 " + gateShape)).attr({
      stroke: black,
      'stroke-width': '3pt'
    });
    signalText = r.set().push(transistorA = r.text(85, 325, 0), transistorB = r.text(200, 325, 0), transistorC = r.text(361, 275, 1), transistorAA = r.text(484, 225, 0), transistorBB = r.text(484, 325, 0), output = r.text(625, 150, 0)).attr({
      'font-size': '30px',
      fill: black,
      'text-anchor': "start",
      'font-family': fontfamily
    });
    labels = r.set().push(inputA_label = r.text(85, 300, "input A"), inputB_label = r.text(207, 300, "input B"), output_label = r.text(635, 125, 'output'), inputAA_label = r.text(486, 205, "input A"), inputBB_label = r.text(486, 305, "input B")).attr({
      'font-size': '14px',
      'font-family': fontfamily,
      fill: darkgray
    });
    transistorB.attr({
      fill: clickable,
      cursor: 'pointer'
    });
    transistorA.attr({
      fill: clickable,
      cursor: 'pointer'
    });
    toggle = function(bit) {
      if (bit === 1 || bit === '1') {
        return 0;
      } else {
        return 1;
      }
    };
    whenClicked = function(clickable) {
      clickable.attr('text', toggle(clickable.attr('text')));
      changeResults();
      showWires();
      highlightRowinTable();
      return changeGateOutput();
    };
    highlightRowinTable = function() {
      var a, b;
      a = parseInt(transistorA.attr('text'));
      b = parseInt(transistorB.attr('text'));
      rows.attr({
        fill: darkgray
      });
      if (a === '0' || a === 0) {
        if (b === '0' || b === 0) {
          return oo.attr({
            fill: orange
          });
        } else {
          return oi.attr({
            fill: orange
          });
        }
      } else {
        if (b === '0' || b === 0) {
          return io.attr({
            fill: orange
          });
        } else {
          return ii.attr({
            fill: orange
          });
        }
      }
    };
    changeGateOutput = function() {
      var a, b;
      a = parseInt(transistorA.attr('text'));
      b = parseInt(transistorB.attr('text'));
      if ((a === 1 && b === 1) || (a === 0 && b === 0)) {
        return gate_output_c.attr('text', 0);
      } else {
        return gate_output_c.attr('text', 1);
      }
    };
    changeResults = function() {
      var a, b, c;
      a = parseInt(transistorA.attr('text'));
      b = parseInt(transistorB.attr('text'));
      c = parseInt(transistorC.attr('text'));
      transistorAA.attr('text', a);
      transistorBB.attr('text', b);
      if (a | b) {
        transistorC.attr('text', 0);
      } else {
        transistorC.attr('text', 1);
      }
      if (a ^ b) {
        return output.attr('text', 1);
      } else {
        return output.attr('text', 0);
      }
    };
    showWires = function() {
      var a, b, c;
      a = parseInt(transistorA.attr('text'));
      b = parseInt(transistorB.attr('text'));
      c = parseInt(transistorC.attr('text'));
      if (a | b) {
        $('#both_OFF').hide();
        $('#both_ON').hide();
        if (a) {
          $('#gateA_ON').show();
        } else {
          $('#gateA_ON').hide();
        }
        if (b) {
          $('#gateB_ON').show();
        } else {
          $('#gateB_ON').hide();
        }
        if (a & b) {
          $('#gateA_ON').hide();
          $('#gateB_ON').hide();
          $('#both_ON').show();
        }
      } else {
        $('#both_OFF').show();
        $('#gateA_ON').hide();
        $('#gateB_ON').hide();
        $('#both_ON').hide();
      }
      if (c) {
        $('#gateC_ON').show();
        $('#output_ON').hide();
        $('#gateBB_ON').hide();
        $('#gateAA_ON').hide();
        return $('#AABB_ON').hide();
      } else {
        $('#gateC_ON').hide();
        $('#output_ON').hide();
        if (a | b) {
          if (a) {
            $('#gateAA_ON').show();
            if (!b) {
              $('#output_ON').show();
            }
          } else {
            $('#gateAA_ON').hide();
          }
          if (b) {
            if (a & b) {
              $('#gateAA_ON').show();
              return $('#gateBB_ON').show();
            } else {
              $('#output_ON').show();
              return $('#gateBB_ON').hide();
            }
          } else {
            return $('#gateBB_ON').hide();
          }
        }
      }
    };
    makeMovingLine = function(path, dashType, color, width, htmlid) {
      var i, interval, move, name;
      name = r.path(path).attr({
        'stroke-dasharray': dashType,
        'stroke-width': width,
        stroke: color
      });
      name.node.id = htmlid;
      $('#' + htmlid).hide();
      i = 0;
      move = function() {
        $('#' + htmlid).attr('stroke-dashoffset', i--);
        if (i < -20) {
          return i = 0;
        }
      };
      return interval = window.setInterval(move, 50);
    };
    transistorA.click(function() {
      whenClicked(this);
      return gate_input_a.attr('text', this.attr('text'));
    });
    transistorB.click(function() {
      whenClicked(this);
      return gate_input_b.attr('text', this.attr('text'));
    });
    gate_input_a.click(function() {
      this.attr('text', toggle(this.attr('text')));
      transistorA.attr('text', this.attr('text'));
      changeResults();
      showWires();
      highlightRowinTable();
      return changeGateOutput();
    });
    gate_input_b.click(function() {
      this.attr('text', toggle(this.attr('text')));
      transistorB.attr('text', this.attr('text'));
      changeResults();
      showWires();
      highlightRowinTable();
      return changeGateOutput();
    });
    makeMovingLine("M61, 100 h600", ".", powerDots, 3, "POWER");
    makeMovingLine("M223.5, 100 v150 h-50 v150", ".", powerDots, 3, "gateA_ON");
    makeMovingLine("M223.5, 100 v150 h68 v150", ".", powerDots, 3, "gateB_ON");
    makeMovingLine("M223.5, 100 v150 h68 v150 m-62.5,-150 h-55 v150", ".", powerDots, 3, "both_ON");
    makeMovingLine("M223.5, 100 v75 h100 v100 h25 ", ".", powerDots, 3, "both_OFF");
    makeMovingLine("M523.5, 100 v50 h-70 v250", ".", powerDots, 3, "gateC_ON");
    makeMovingLine("M523.5, 100 v50 h50 v250", ".", powerDots, 3, "AABB_ON");
    makeMovingLine("M523.5, 100 v50 h50 v150", ".", powerDots, 3, "gateAA_ON");
    makeMovingLine("M573.5,300  v100 ", ".", powerDots, 3, "gateBB_ON");
    makeMovingLine("M523.5, 100 v50 h90", ".", powerDots, 3, "output_ON");
    $('#POWER').show();
    $('#gateC_ON').show();
    return $('#both_OFF').show();
  };

}).call(this);
