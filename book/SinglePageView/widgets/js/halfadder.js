// Generated by CoffeeScript 1.3.1
(function() {
  var black, blue, fontfamily, gray, orange, toggle, white;

  black = '#000';
  white = "#fff";
  gray = '#2c9ad0';
  darkgray ="#5F5F5F";
  orange = gray;  //tt hightlight
  blue = '#7922A2'; // interactive element
  fontfamily = '"HelveticaNeue-Light", "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif';

  window.onload = function() {
    var andTT_acrossLine, andTT_updownLine, andTT_visible, and_ii, and_io, and_label, and_oi, and_oo, and_tt, and_xyz, canvas, carrylabel, gatelabels, halfadder, highlight, inputfontsize, inputset, inputx, inputy, makeMovingLine, output_carryout, output_sum, outputset, showWires, sumlabel, updateOutput, xorTT_acrossLine, xorTT_updownLine, xorTT_visible, xor_ii, xor_io, xor_label, xor_oi, xor_oo, xor_tt, xor_xyz;
    canvas = new Raphael('halfadder-ralph', 700, 350);
    halfadder = canvas.path("M351.52,151h20.1c33.4-1.59,53.2-13.21,63.92-22.68c9.12-8.051,13.41-15.86,14.95-19.181h173.76v-5H450.77					c-1.09-3.46-4.17-10.81-12.21-18.39c-14.22-13.4-36.49-21.05-66.2-22.75h-20.95l2.17,3.75c2.18,3.76,5.96,10.67,9.38,17.83H356					c-4.56-9.811-9.59-18.64-9.97-19.311l-3.48,1.98c2.09,3.66,5.68,10.31,9.01,17.33H245.67c-1.25-2.38-3.76-4-6.64-4					c-2.891,0-5.391,1.62-6.641,4h-54.14v5h53.41c0.52,2.61,2.39,4.74,4.87,5.61v28.829h-58.28v5h58.28V321.95h126.76v-5H241.53					V129.02h33.41c0.76,2.101,2.44,3.761,4.55,4.5V279.5h83.8v37.45h0.96v5h-0.96v21.53h41.18c24.3,0,44.17-19.37,44.97-43.48					h174.81v-5H449.34c-1.78-23.2-21.229-41.52-44.87-41.52h-41.18v21.02h-78.8V133.52c2.11-0.739,3.79-2.399,4.55-4.5h63.34					c-4.59,9.98-9.74,19.15-9.83,19.32l3.48,1.97c0.41-0.72,5.99-10.68,10.729-21.29h5.96c-3.37,7.381-7.05,14.431-9.16,18.271					L351.52,151z M368.29,258.48h36.18c22.05,0,40,17.939,40,40c0,22.05-17.95,40-40,40h-36.18V258.48z M354.59,124.02H289.1					c-1-2.97-3.81-5.109-7.11-5.109c-3.3,0-6.11,2.14-7.11,5.109h-33.35V95.19c2.47-0.87,4.35-3,4.87-5.61h107.46					c3.14,7.1,5.609,13.939,5.62,17.86C359.49,111.25,357.35,117.52,354.59,124.02z M358.9,124.02					c2.62-6.409,4.59-12.569,4.58-16.59c-0.01-4.279-2.32-11.01-5.25-17.85h7.03c2.98,6.72,5.24,13.08,5.17,16.65					c-0.08,3.909-2.46,10.699-5.49,17.789H358.9z M375.43,106.33c0.19-9.15-10.569-29.62-15.399-38.33h12.12					c35.16,2.02,53.49,12.59,62.67,21.1c8.31,7.7,10.81,15.15,11.399,17.33c-2.18,4.96-18.39,36.88-74.78,39.57h-11.51					C364.49,137.34,375.23,115.94,375.43,106.33z").attr({
      fill: black
    });
    xorTT_visible = false;
    andTT_visible = false;
    inputfontsize = '30px';
    inputset = canvas.set();
    inputset.push(inputx = canvas.text(160, 87, "x"), inputy = canvas.text(160, 127, "y")).attr({
      'font-size': inputfontsize,
      'fill': blue,
      'text-anchor': 'end',
      'font-family': fontfamily
    });
    outputset = canvas.set();
    outputset.push(output_sum = canvas.text(665, 104, "sum"), output_carryout = canvas.text(667, 295, "carry")).attr({
      'font-size': inputfontsize,
      'fill': black,
      'font-family': fontfamily
    });
    sumlabel = canvas.text(595, 87, 'sum').attr({
      'font-size': '32px',
      'fill': darkgray,
      'font-family': fontfamily
    }).hide();
    carrylabel = canvas.text(590, 275, 'carry').attr({
      'font-size': '32px',
      'fill': darkgray,
      'font-family': fontfamily
    }).hide();
    gatelabels = canvas.set().push(xor_label = canvas.text(403, 107, 'xor'), and_label = canvas.text(403, 297, 'and')).attr({
      'font-size': inputfontsize,
      'fill': blue,
      'font-family': fontfamily
    });
    xor_tt = canvas.set().push(xorTT_updownLine = canvas.rect(489, 20, 1, 65), xorTT_acrossLine = canvas.rect(460, 30, 50, 1), xor_xyz = canvas.text(487, 20, "x y\u00a0\u00a0\u00a0 z"), xor_oo = canvas.text(485, 40, "0 0\u00a0\u00a0\u00a0 0"), xor_oi = canvas.text(485, 53, "0 1\u00a0\u00a0\u00a0 1"), xor_io = canvas.text(485, 66, "1 0\u00a0\u00a0\u00a0 1"), xor_ii = canvas.text(485, 79, "1 1\u00a0\u00a0\u00a0 0")).attr({
      fill: black,
      'font-size': '15px',
      stroke: 'none',
      'font-family': fontfamily
    });
    xor_tt.hide();
    and_tt = canvas.set().push(andTT_updownLine = canvas.rect(489, 220, 1, 65), andTT_acrossLine = canvas.rect(460, 230, 50, 1), and_xyz = canvas.text(487, 220, "x y\u00a0\u00a0\u00a0 z"), and_oo = canvas.text(485, 240, "0 0\u00a0\u00a0\u00a0 0"), and_oi = canvas.text(485, 253, "0 1\u00a0\u00a0\u00a0 0"), and_io = canvas.text(485, 266, "1 0\u00a0\u00a0\u00a0 0"), and_ii = canvas.text(485, 279, "1 1\u00a0\u00a0\u00a0 1")).attr({
      fill: black,
      'font-size': '15px',
      stroke: 'none',
      'font-family': fontfamily
    });
    and_tt.hide();
    inputx.click(function() {
      inputx.attr('text', toggle(inputx.attr('text')));
      return updateOutput();
    });
    inputy.click(function() {
      inputy.attr('text', toggle(inputy.attr('text')));
      return updateOutput();
    });
    xor_label.click(function() {
      if (xorTT_visible === false) {
        xorTT_visible = true;
        return xor_tt.show();
      } else {
        xorTT_visible = false;
        return xor_tt.hide();
      }
    });
    and_label.click(function() {
      if (andTT_visible === false) {
        andTT_visible = true;
        return and_tt.show();
      } else {
        andTT_visible = false;
        return and_tt.hide();
      }
    });
    makeMovingLine = function(path, dashType, color, width, htmlid) {
      var i, interval, move, name;
      name = canvas.path(path).attr({
        'stroke-dasharray': dashType,
        'stroke-width': width,
        stroke: color
      });
      name.node.id = htmlid;
      $('#' + htmlid).hide();
      i = 0;
      move = function() {
        $('#' + htmlid).attr('stroke-dashoffset', i--);
        if (i < -20) {
          return i = 0;
        }
      };
      return interval = window.setInterval(move, 50);
    };
    showWires = function() {
      var a, b, c, s;
      a = parseInt(inputx.attr('text'), 2);
      b = parseInt(inputy.attr('text'), 2);
      s = parseInt(output_sum.attr('text'), 2);
      c = parseInt(output_carryout.attr('text'), 2);
      if (a === 1) {
        $('#a_on').show();
      } else {
        $('#a_on').hide();
      }
      if (b === 1) {
        $('#b_on').show();
      } else {
        $('#b_on').hide();
      }
      if (s === 1) {
        $('#sum_on').show();
      } else {
        $('#sum_on').hide();
      }
      if (c === 1) {
        return $('#carry_on').show();
      } else {
        return $('#carry_on').hide();
      }
    };
    updateOutput = function() {
      var carry, sum, x, y;
      if (inputx.attr('text') !== "operand x" && inputy.attr('text') !== "operand y") {
        x = parseInt(inputx.attr('text'), 2);
        y = parseInt(inputy.attr('text'), 2);
        sum = x ^ y;
        carry = x && y;
        output_sum.attr('text', sum);
        output_carryout.attr('text', carry);
        switch (x) {
          case 0:
            if (y === 0) {
              highlight('00');
            }
            if (y === 1) {
              highlight('01');
            }
            break;
          case 1:
            if (y === 0) {
              highlight('10');
            }
            if (y === 1) {
              highlight('11');
            }
        }
        sumlabel.show();
        carrylabel.show();
      }
      return showWires();
    };
    highlight = function(line) {
      xor_tt.attr({
        fill: black
      });
      and_tt.attr({
        fill: black
      });
      switch (line) {
        case '00':
          xor_oo.attr('fill', orange);
          return and_oo.attr('fill', orange);
        case '01':
          xor_oi.attr('fill', orange);
          return and_oi.attr('fill', orange);
        case '10':
          xor_io.attr('fill', orange);
          return and_io.attr('fill', orange);
        case '11':
          xor_ii.attr('fill', orange);
          return and_ii.attr('fill', orange);
      }
    };
    makeMovingLine("M178, 87 h 190 m-129,0 v233 h125", ".", white, 3, "a_on");
    makeMovingLine("M178, 127 h 190 m-86,0 v150 h80", ".", white, 3, "b_on");
    makeMovingLine("M450, 107 h 175 ", ".", white, 3, "sum_on");
    return makeMovingLine("M450, 298 h 175 ", ".", white, 3, "carry_on");
  };

  toggle = function(number) {
    if (number === 0 || number === '0'|| number=='x' || number=='y') {
      return 1;
    } else {
      return 0;
    }
    if (number === 1 || number === '1') {
      return 0;
    } else {
      return 0;
    }
  };

}).call(this);
